@using MyCinema.Models;
@model Tuple<BookSeat,List<BookSeat>>

@{
    ViewBag.Title = "Booking";
}

<h2>Booking</h2>
@if (Model != null)
{
    Session["list1"] = Model.Item1;
    Session["list2"] = Model.Item2;
}

@using (Html.BeginForm("AddBooking", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>BookSeat</h4>
    <br />
    <div>
        <strong>
            @Session["Hall"]
            @Session["GoodSeatBook"]
        </strong>
    </div>


    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => ((BookSeat)Session["list1"]).Full_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).Full_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).Full_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Item1.seatno, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).seatno, new { htmlAttributes = new { @class = "form-control" } })
            <strong>@Session["Seatno"]</strong>
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).seatno, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).movieId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).movieId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).MyHall, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).MyHall, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).movieName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).movieName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).moviedate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).moviedate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).movietime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).movietime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => ((BookSeat)Session["list1"]).Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => ((BookSeat)Session["list1"]).Amount, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add to cart" class="btn btn-primary" />
            <input type="submit" value="Pay_Now" formaction=@Url.Action("PayNow") formmethod="post" class="btn btn-primary" />
            <br />
            <br />
            <input type="submit" value="Cart Check" style="background-color:green" formaction=@Url.Action("CheckMyCart") formmethod="post" class="btn btn-primary"  />

        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <label class="label-danger">@ViewBag.DuplicateMessage</label>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <label class="label-success">@ViewBag.SuccessMessage</label>
        </div>
    </div>
    <div>
        @Session["Sucess"]
    </div>
</div>

}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Booked Seats</th>
        </tr>
    </thead>
    <tbody>
        
        
        @if (((List<BookSeat>) Session["list2"]).Count() == 0)
        {
            <tr>
                <td colspan="3" style="color:red">
                    no seats booked.
                </td>
            </tr>
        }
        else
        {
            foreach (var item in ((List<BookSeat>) Session["list2"]))
            {
                <tr>
                    <td>@item.seatno</td>
                </tr>
            }
        }
        
    </tbody>
</table>

<div>
    @Html.ActionLink("Back to List", "UsersMoviesList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
