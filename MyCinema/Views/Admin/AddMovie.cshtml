@model MyCinema.Models.Movie
@{
    ViewBag.Title = "Add Movie";
}

@using (Html.BeginForm("AddMovie", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">

    <h3>Movie info</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(m => m.Category, new List<SelectListItem> {
  new SelectListItem { Text="Action",Value="Action"},
  new SelectListItem { Text="Drama",Value="Drama"},
  new SelectListItem { Text="Comedy",Value="Comedy"},
  new SelectListItem { Text="Horror",Value="Horror"},
  new SelectListItem { Text="Romance",Value="Romance"},
  }, "-- Select Category --", new { @class = "form-control" }
  )
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.hall, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.EditorFor(model => model.hall, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(m => m.hall, new List<SelectListItem> {
   new SelectListItem { Text="A1",Value="A1"},
   new SelectListItem { Text="A2",Value="A2"},
   new SelectListItem { Text="A3",Value="A3"},
   new SelectListItem { Text="B1",Value="B1"},
   new SelectListItem { Text="B2",Value="B2"},
   }, "-- Select Hall --", new { @class = "form-control" }
   )
            @Html.ValidationMessageFor(model => model.hall, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>
    <h3>Upload Image</h3>
    <input type="file" name="file" value="Browse" />
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
    @Html.ActionLink("MoviesList", "AdminMoviesList", "Account")
    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <label class="label-success">@ViewBag.SuccessMessage</label>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <label class="label-danger">@ViewBag.DuplicateMessage</label>
        </div>
    </div>
</div>
}

@if (ViewBag.UploadSuccess == true)
{
    <span>Upload Completed Successfully</span>
}